{"version":3,"file":"static/webpack/static/development/pages/cartoon.js.5bb90251ffa002498043.hot-update.js","sources":["webpack:///./src/components/cartoon/Comment.js"],"sourcesContent":["// 1, import\nimport styled from \"styled-components\";\nimport Link from \"next/link\";\nimport fetch from \"utils/fetch\";\nconst CONTENT = \"content\";\nconst USER = \"name\";\nconst EMAIL = \"email\";\n// 2, dom\nconst data = {\n  comments: [\n    { user: \"Lian\", content: \"还不错\", date: \"2018年10月12日 18:54\" },\n    {\n      user: \"Lian\",\n      content:\n        \"我只想补充一点，这是一种不推荐的语法。来自reactjs文档：此语法的问题是每次按钮呈现时都会创建不同的回调。在大多数情况下，这很好。\",\n      date: \"2018年10月12日 18:54\"\n    },\n    {\n      user: \"Lian\",\n      content: `<blockquote>\n    <pre>引用Lian的发言：</pre>\n    还不错\n    </blockquote>\n    我来试试点评\n    `,\n      date: \"2018年10月12日 18:54\"\n    },\n    {\n      user: \"Lian\",\n      content: `<blockquote>\n      <pre>引用Lian的发言：</pre>\n      <blockquote>\n          <pre>引用Lian的发言：</pre>\n          还不错\n          </blockquote>\n          我来试试点评\n          \n      </blockquote>\n    我来试试点评\n    `,\n      date: \"2018年10月12日 18:54\"\n    }\n  ]\n};\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { content: \"\", name: \"\", email: \"\" };\n  }\n  handleChange = (state, e) => {\n    // console.log(data);\n    this.setState({ [state]: e.target.value });\n  };\n\n  handleReply = (state, e) => {\n    const content = `<blockquote>\n<pre>引用${state.user}的发言：</pre>\n${state.content}\n</blockquote>\n\n`;\n    this.setState({\n      content\n    });\n    this.inputComments.focus();\n    // alert(state);\n  };\n\n  handleSubmit = () => {\n    // this.postCommentData();\n    alert(\"submit\");\n  };\n  async postCommentData() {\n    try {\n      const result = await fetch.get(\"/user\");\n    } catch (err) {}\n  }\n  render() {\n    const none_comments = <p>☕ 还没有评论</p>;\n    const some_comments = (\n      <div>\n        {data.comments.map(item => {\n          return (\n            <div key={item.content}>\n              <User>{item.user}</User>\n              <span>说：</span>\n\n              <p dangerouslySetInnerHTML={{ __html: item.content }} />\n              <Time>\n                {item.date} |{\" \"}\n                <span onClick={e => this.handleReply(item, e)}>回复</span>\n              </Time>\n            </div>\n          );\n        })}\n      </div>\n    );\n    const comments = data.comments.length > 0 ? some_comments : none_comments;\n    return (\n      <Container>\n        <Comments>\n          <h2>评论</h2>\n          {comments}\n        </Comments>\n\n        <Writting>\n          <h2>我要发表看法</h2>\n\n          <p>您的评论:</p>\n          <textarea\n            ref={input => {\n              this.inputComments = input;\n            }}\n            cols=\"70\"\n            rows=\"10\"\n            value={this.state.content}\n            onChange={e => this.handleChange(CONTENT, e)}\n          />\n          <p>您的大名:</p>\n          <input\n            name=\"isGoing\"\n            type=\"text\"\n            value={this.state.name}\n            onChange={e => this.handleChange(USER, e)}\n          />\n          <span>«-必填</span>\n          <p>您的邮箱:</p>\n          <input\n            name=\"isGoing\"\n            type=\"text\"\n            value={this.state.email}\n            onChange={e => this.handleChange(EMAIL, e)}\n          />\n          <span>«-选填，不公开</span>\n          <br />\n          <button onClick={() => this.handleSubmit()}>发表</button>\n          <span>«-点击提交</span>\n        </Writting>\n      </Container>\n    );\n  }\n}\n\nexport default Index;\n\n// 3,style\nconst Container = styled.div`\n  width: 780px;\n  background-color: white;\n  border: 1.5px solid #071419;\n  border-radius: 12px;\n  /* height: 175px; */\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  padding: 10px;\n  margin-top: 20px;\n  p {\n    padding: 0 10px;\n    margin-bottom: 5px;\n  }\n\n  h2 {\n    font-size: 18px;\n    padding: 10px;\n    border-bottom: 1px solid #071419;\n  }\n\n  *:focus {\n    outline: 0 !important;\n  }\n`;\n\nconst Writting = styled.div`\n  margin: 0 10px;\n\n  textarea {\n    resize: none;\n  }\n  span {\n    margin-left: 10px;\n    color: #999;\n  }\n\n  button {\n    margin-top: 20px;\n    width: 130px;\n    background: orangered;\n    border-radius: 5px;\n    color: white;\n    font-size: 14px;\n    border: none;\n    cursor: pointer;\n  }\n`;\n\nconst Comments = styled.div`\n  /* width: 100%; */\n  margin: 0 10px;\n\n  blockquote {\n    background-color: #96a8c8;\n    margin: 5px;\n    padding: 10px;\n    border-radius: 10px;\n  }\n`;\n\nconst User = styled.span`\n  font-size: 16px;\n  font-weight: bolder;\n  padding: 0 5px;\n`;\nconst Time = styled.p`\n  font-size: 14px;\n  padding: 0 20px;\n  text-align: right;\n\n  span {\n    cursor: pointer;\n  }\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAJA;AAOA;AACA;AAMA;AARA;AAWA;AACA;AAWA;AAbA;AAnBA;AACA;AAmCA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAKA;AACA;AACA;AACA;AARA;AAUA;AACA;AAKA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAtBA;AAwBA;AACA;AACA;AACA;AAzBA;AAAA;AAAA;AAAA;AAAA;AAFA;AAGA;AACA;;;;;;;;;;;;;;AAyBA;AACA;;AADA;;;;;;;;;;;;;;;;;;;;;;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAhGA;AACA;AAkGA;AACA;AAEA;AAAA;AAAA;AAAA;AA2BA;AAAA;AAAA;AAAA;AAuBA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}
webpackHotUpdate("static/development/pages/blog-post.js",{

/***/ "./blog/dist/post/2018/4-markdown.json":
/*!*********************************************!*\
  !*** ./blog/dist/post/2018/4-markdown.json ***!
  \*********************************************/
/*! exports provided: title, date, tag, bodyContent, bodyHtml, preview, dir, base, ext, sourceBase, sourceExt, default */
/***/ (function(module) {

module.exports = {"title":"4 Markdown","date":"2018-11-04T00:00:00.000Z","tag":["收集"],"bodyContent":"1  markdown-it  -- markdown解析器\nhttps://github.com/markdown-it/markdown-it\n\n2 markdown-it -- markdown的emoji插件，添加表情的支持  \nhttps://github.com/markdown-it/markdown-it-emoji\n\n3 twemoji -- twitter 表情包  \nhttps://github.com/twitter/twemoji\n\n4 react markdown --  React的markdown组件  \nhttps://github.com/rexxars/react-markdown\n\n5 markdown to json -- 用Markdown方式定义数据，然后转换成json\nhttps://github.com/njvack/markdown-to-json\n\n有时候，你需要编写json  \n手工编写，非常痛苦，因为它有一个繁琐的格式。  \n构建一个工具来编写，非常麻烦，因为你要提前准备一堆的工作。  \n\n其实，你想要的并不复杂。你只需要打开文本编辑器，以适合普通人阅读的方式，处理嵌套的数据。  \nmarkdown-json 便是为此而生  \n\n6 markdown-json -- 静态api  \nhttps://github.com/klaytonfaria/markdown-json#readme  \n\n在这里，markdown是你可靠的数据源  \n你可以将它转换成json  \n你可以用作静态的api  \n\n7 processmd -- 处理markdown的目录文件  \nhttps://github.com/tscanlin/processmd  \n你可以将嵌套目录转换成json  \n你可以选择添加一个摘要文件，提供所有文件信息\n\n8 gulp-markdown-to-json  -- 基于gulp的解析器  \nhttps://github.com/sparkartgroup/gulp-markdown-to-json  \n处理流程  \n解析markdown -> markdown解析为html -> 包装成json    \n\n9 prism -- 轻量，强大的语法高亮库  \nhttps://github.com/PrismJS/prism\n\n10 prism-themes -- prism的主题\nhttps://github.com/PrismJS/prism-themes  \n\n扩展更多的主题风格  \n\n11 Typography.js -- 强大的工具包，用于构建漂亮的网站  \nhttps://github.com/KyleAMathews/typography.js\n\n网站的排版设计是一个复杂的系统，因为多个元素相互关联。  \n试想，数十个元素的一百多个样式，必须和谐有序。一次的修改意味着数十次繁琐的重新计算与调整。  \nTypography提供了一种探索和定义排版设计的方法。  \n事先提供基本配置，Typography引擎为相关元素生成css。\n\n12 cross-env -- 设置环境变量的跨平台方案  \nwindow系统和posi系统，使用环境变量的方式不同。  \n为了让同一套方案在不同系统同时生效，需要一套跨平台方案。  \n\n13 glob -- node 的glob实现  \n匹配指定模式的文件名或目录  \nhttps://github.com/isaacs/node-glob\n\n14 prettier -- 代码格式化软件  \n\nhttps://github.com/prettier/prettier\n\n15 rimraf  -- node的`rm -rf`工具  \n\nhttps://github.com/isaacs/rimraf\n\n16 rollup  -- ES模块打包器  \n\nhttps://github.com/rollup/rollup\n\n17 rxjs  -- 可观察集合，异步和基于事件的库  \n\nhttps://github.com/Reactive-Extensions/RxJS\n\n18 loose-envify  -- 像envify，但更快  \nhttps://github.com/zertosh/loose-envify  \n将node的环境变量，替换成简单的字符串  \n\n19 symbol-obervable  -- Symbol.obervable的垫片  \n\n20 benchmark  -- 基准测试的库  \nhttps://github.com/google/benchmark  \n\n21 cheerio -- 为服务器设计的jQuery实现  \nhttps://github.com/cheeriojs/cheerio  \n\n22 chromedriver  -- node 实现的selenium chromeDriver包装器  \nhttps://github.com/giggio/node-chromedriver  \n\n23 clone  -- 深度克隆复杂的js对象  \nhttps://github.com/pvorb/clone  \n\n24 fkill -- node的结束进程实现  \nhttps://github.com/sindresorhus/fkill\n\n\n25 flatten -- 展开嵌套的js对象  \nhttps://github.com/hughsk/flat  \n\n26 flow-bin -- JavaScript的静态类型检查器  \nhttps://github.com/flowtype/flow-bin\n\n27 get-port -- 获取可用的端口  \nhttps://github.com/sindresorhus/get-port  \n\n28 lerna -- 管理多个包的工具  \nhttps://github.com/lerna/lerna \n\n29 micro -- 微服务\nhttps://github.com/zeit/micro\n\n30 mkdirp  -- node 的 `mkdir -p`实现  \nhttps://github.com/substack/node-mkdirp\n\n31 node-notifier -- 发送跨平台通知  \nhttps://github.com/mikaelbr/node-notifier  \n\n32 standard -- JavaScript的样式检查，修复工具  \nhttps://github.com/standard/standard  \n\n33 taskr  -- 基于并发的任务自动化工具  \nhttps://github.com/lukeed/taskr\n\n34 wait-port  -- 等待端口打开  \nhttps://github.com/dwmkerr/wait-port  \n\n35 chalk -- 让终端样式更美  \nhttps://github.com/chalk/chalk\n\n36 chokidar -- fs.watch 和 watchFile、 fsevents包装器  \nhttps://github.com/paulmillr/chokidar\n\n37 decamelize  -- 驼峰命名的转换工具  \nhttps://github.com/sindresorhus/decamelize\n\n38","bodyHtml":"<p>1  markdown-it  -- markdown解析器\nhttps://github.com/markdown-it/markdown-it</p>\n<p>2 markdown-it -- markdown的emoji插件，添加表情的支持<br>\nhttps://github.com/markdown-it/markdown-it-emoji</p>\n<p>3 twemoji -- twitter 表情包<br>\nhttps://github.com/twitter/twemoji</p>\n<p>4 react markdown --  React的markdown组件<br>\nhttps://github.com/rexxars/react-markdown</p>\n<p>5 markdown to json -- 用Markdown方式定义数据，然后转换成json\nhttps://github.com/njvack/markdown-to-json</p>\n<p>有时候，你需要编写json<br>\n手工编写，非常痛苦，因为它有一个繁琐的格式。<br>\n构建一个工具来编写，非常麻烦，因为你要提前准备一堆的工作。</p>\n<p>其实，你想要的并不复杂。你只需要打开文本编辑器，以适合普通人阅读的方式，处理嵌套的数据。<br>\nmarkdown-json 便是为此而生</p>\n<p>6 markdown-json -- 静态api<br>\nhttps://github.com/klaytonfaria/markdown-json#readme</p>\n<p>在这里，markdown是你可靠的数据源<br>\n你可以将它转换成json<br>\n你可以用作静态的api</p>\n<p>7 processmd -- 处理markdown的目录文件<br>\nhttps://github.com/tscanlin/processmd<br>\n你可以将嵌套目录转换成json<br>\n你可以选择添加一个摘要文件，提供所有文件信息</p>\n<p>8 gulp-markdown-to-json  -- 基于gulp的解析器<br>\nhttps://github.com/sparkartgroup/gulp-markdown-to-json<br>\n处理流程<br>\n解析markdown -&gt; markdown解析为html -&gt; 包装成json</p>\n<p>9 prism -- 轻量，强大的语法高亮库<br>\nhttps://github.com/PrismJS/prism</p>\n<p>10 prism-themes -- prism的主题\nhttps://github.com/PrismJS/prism-themes</p>\n<p>扩展更多的主题风格</p>\n<p>11 Typography.js -- 强大的工具包，用于构建漂亮的网站<br>\nhttps://github.com/KyleAMathews/typography.js</p>\n<p>网站的排版设计是一个复杂的系统，因为多个元素相互关联。<br>\n试想，数十个元素的一百多个样式，必须和谐有序。一次的修改意味着数十次繁琐的重新计算与调整。<br>\nTypography提供了一种探索和定义排版设计的方法。<br>\n事先提供基本配置，Typography引擎为相关元素生成css。</p>\n<p>12 cross-env -- 设置环境变量的跨平台方案<br>\nwindow系统和posi系统，使用环境变量的方式不同。<br>\n为了让同一套方案在不同系统同时生效，需要一套跨平台方案。</p>\n<p>13 glob -- node 的glob实现<br>\n匹配指定模式的文件名或目录<br>\nhttps://github.com/isaacs/node-glob</p>\n<p>14 prettier -- 代码格式化软件</p>\n<p>https://github.com/prettier/prettier</p>\n<p>15 rimraf  -- node的<code>rm -rf</code>工具</p>\n<p>https://github.com/isaacs/rimraf</p>\n<p>16 rollup  -- ES模块打包器</p>\n<p>https://github.com/rollup/rollup</p>\n<p>17 rxjs  -- 可观察集合，异步和基于事件的库</p>\n<p>https://github.com/Reactive-Extensions/RxJS</p>\n<p>18 loose-envify  -- 像envify，但更快<br>\nhttps://github.com/zertosh/loose-envify<br>\n将node的环境变量，替换成简单的字符串</p>\n<p>19 symbol-obervable  -- Symbol.obervable的垫片</p>\n<p>20 benchmark  -- 基准测试的库<br>\nhttps://github.com/google/benchmark</p>\n<p>21 cheerio -- 为服务器设计的jQuery实现<br>\nhttps://github.com/cheeriojs/cheerio</p>\n<p>22 chromedriver  -- node 实现的selenium chromeDriver包装器<br>\nhttps://github.com/giggio/node-chromedriver</p>\n<p>23 clone  -- 深度克隆复杂的js对象<br>\nhttps://github.com/pvorb/clone</p>\n<p>24 fkill -- node的结束进程实现<br>\nhttps://github.com/sindresorhus/fkill</p>\n<p>25 flatten -- 展开嵌套的js对象<br>\nhttps://github.com/hughsk/flat</p>\n<p>26 flow-bin -- JavaScript的静态类型检查器<br>\nhttps://github.com/flowtype/flow-bin</p>\n<p>27 get-port -- 获取可用的端口<br>\nhttps://github.com/sindresorhus/get-port</p>\n<p>28 lerna -- 管理多个包的工具<br>\nhttps://github.com/lerna/lerna</p>\n<p>29 micro -- 微服务\nhttps://github.com/zeit/micro</p>\n<p>30 mkdirp  -- node 的 <code>mkdir -p</code>实现<br>\nhttps://github.com/substack/node-mkdirp</p>\n<p>31 node-notifier -- 发送跨平台通知<br>\nhttps://github.com/mikaelbr/node-notifier</p>\n<p>32 standard -- JavaScript的样式检查，修复工具<br>\nhttps://github.com/standard/standard</p>\n<p>33 taskr  -- 基于并发的任务自动化工具<br>\nhttps://github.com/lukeed/taskr</p>\n<p>34 wait-port  -- 等待端口打开<br>\nhttps://github.com/dwmkerr/wait-port</p>\n<p>35 chalk -- 让终端样式更美<br>\nhttps://github.com/chalk/chalk</p>\n<p>36 chokidar -- fs.watch 和 watchFile、 fsevents包装器<br>\nhttps://github.com/paulmillr/chokidar</p>\n<p>37 decamelize  -- 驼峰命名的转换工具<br>\nhttps://github.com/sindresorhus/decamelize</p>\n<p>38</p>\n","preview":"1  markdown-it  -- markdown解析器\nhttps://github.com/markdown-it/markdown-it\n\n2 markdown-it --","dir":"blog/dist/post/2018","base":"4-markdown.json","ext":".json","sourceBase":"4-markdown.md","sourceExt":".md"};

/***/ }),

/***/ "./blog/dist/summary.json":
/*!********************************!*\
  !*** ./blog/dist/summary.json ***!
  \********************************/
/*! exports provided: fileMap, sourceFileArray, default */
/***/ (function(module) {

module.exports = {"fileMap":{"blog/dist/post/2018/4-markdown.json":{"title":"4 Markdown","date":"2018-11-04T00:00:00.000Z","tag":["收集"],"preview":"1  markdown-it  -- markdown解析器\nhttps://github.com/markdown-it/markdown-it\n\n2 markdown-it --","dir":"blog/dist/post/2018","base":"4-markdown.json","ext":".json","sourceBase":"4-markdown.md","sourceExt":".md"},"blog/dist/post/2018/two.json":{"title":"2 文章格式表现","date":"2018-10-13T00:00:00.000Z","tag":["收集"],"preview":"1 表情\n:sparkles:\n\n2 代码高亮\nvar foo = function (bar) {\n  return bar++;\n};\n\nconsole.log(foo(6));\n\n3 笑脸\n8-)\n😀\n👨‍🎓","dir":"blog/dist/post/2018","base":"two.json","ext":".json","sourceBase":"two.md","sourceExt":".md"},"blog/dist/index.json":{"siteTitle":"我的花园","description":"种子，松土，浇水，发芽，开花，结果","topLinks":[{"text":"Blog","href":"/article"},{"text":"Github","href":"/"}],"copyright":"Lian","stylesheets":["https://unpkg.com/tachyons@4.7.4/css/tachyons.min.css"],"backgroundClass":"bg-dark-gray","siteId":"","dir":"blog/dist","base":"index.json","ext":".json","sourceBase":"index.md","sourceExt":".md"},"blog/dist/post/2018/three.json":{"title":"3 漫画小动员","date":"2018-11-02T00:00:00.000Z","tag":["工作"],"preview":"1 故事名称\n2 计划\n每天创作一个故事，两天出版一个故事\n3 主角\n程序员：学历高，兢兢业业的上班族\n狗： 萌物\n直播男：不爱拘束，无固定工作，爱折腾，自制力差，尝试新事物，但容易放弃\n神秘女：\n4 故事卖点\n5","dir":"blog/dist/post/2018","base":"three.json","ext":".json","sourceBase":"three.md","sourceExt":".md"},"blog/dist/post/2018/one.json":{"title":"1 软件工程师生存指南","date":"2018-10-12T00:00:00.000Z","tag":["工作"],"preview":"","dir":"blog/dist/post/2018","base":"one.json","ext":".json","sourceBase":"one.md","sourceExt":".md"},"blog/dist/post/2018/5-cartoon-story.json":{"title":"5 漫画小故事","date":"2018-11-5","tag":["收集"],"preview":"1\n好好挑朋友\n好好挑对象\n好好挑与你有关的人\n因为。。。\n人也有伪劣产品\n\n题目  伪劣产品\n漫画物料\n面具 -- 代表伪造\n表情 -- 代表优劣\n\n2\n过好每一天\n就是对无奈人生最好的报复\n\n题目","dir":"blog/dist/post/2018","base":"5-cartoon-story.json","ext":".json","sourceBase":"5-cartoon-story.md","sourceExt":".md"}},"sourceFileArray":["blog/article/index.md","blog/article/post/2018/4-markdown.md","blog/article/post/2018/5-cartoon-story.md","blog/article/post/2018/one.md","blog/article/post/2018/three.md","blog/article/post/2018/two.md"]};

/***/ })

})
//# sourceMappingURL=blog-post.js.670ec673d5dca9c195ba.hot-update.js.map